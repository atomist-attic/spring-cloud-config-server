/*
 * Copyright Â© 2016 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@description "creates a new Spring Cloud Config Server project"
@tag "java"
@tag "spring"
@tag "spring-boot"
@tag "spring-cloud"
@generator
editor NewGitBackedSpringCloudConfigServer

uses atomist-rugs.common-editors.PomParameterizer
uses atomist-rugs.common-editors.PackageMove
uses atomist-rugs.common-editors.RemoveApacheSoftwareLicense20
uses atomist-rugs.common-editors.RemoveChangeLog
uses atomist-rugs.common-editors.RemoveCodeOfConduct

@displayName "Project Name"
@description "name of your new project"
@validInput "a valid GitHub repo name containing only alphanumeric, ., -, and _ characters and 21 characters or less to avoid Slack truncating the name when creating a channel for the repo"
@minLength 1
@maxLength 21
param project_name: @project_name

@displayName "Maven Artifact ID"
@description "a valid Maven Artifact ID, often used to specify the output of your project"
@minLength 1
@maxLength 21
@optional
@default "myartifact"
param artifact_id: @artifact_id

@displayName "Group ID"
@description "a Group id: Used by Maven"
@minLength 1
@validInput "A valid Maven Group ID, often used to indicate your company, group or open source project"
@optional
@default "mygroup"
param group_id: @group_id

@displayName "Semantic Version"
@description "a Semantic Version number of the form: MAJOR.MINOR.PATCH"
@minLength 1
@validInput "MAJOR.MINOR.PATCH"
@optional
@default "0.1.0-SNAPSHOT"
param version: @semantic_version

@displayName "Project Description"
@description "short descriptive text describing the new project"
@minLength 1
@validInput "any free text"
@optional
@default "My new project"
param description: @any

@displayName "Root Package"
@description "Root package for your generated source"
@minLength 1
@validInput "a valid Java package name, i.e. com.myorg"
@optional
@default "com.myorg"
param root_package: @java_package

@displayName "Git Repo Location"
@description "a Git repository location for configuration to serve (i.e. https://github.com/atomist-rugs/sample-config-repo)"
@minLength 1
@validInput "a valid URI"
@optional
@default "https://github.com/atomist-rugs/sample-config-repo"
param git_repo_location: @url

let old_package = "com.atomist.configurationserver"
let default_git_repo_location = "uri: https://github.com/atomist-rugs/sample-config-repo"

SwitchReadmes
PomParameterizer name = project_name
PackageMove new_package = root_package
AddCreationDateToReadme
RemoveApacheSoftwareLicense20
RemoveChangeLog
RemoveCodeOfConduct

with File when name="application.yml"
  do replace default_git_repo_location { "uri: " + git_repo_location }


@description "Switches READMEs replacing markers with a set of parameters"
editor SwitchReadmes

@description "Name of the new project"
@displayName "Name"
param project_name: @project_name

@default ""
@optional
@description "Description of the new project"
@displayName "description"
@validInput "Free Text"
param description: @any

let template = "readme.vm"

with Project
  do merge template to "README.md"


@description "Adds a creation date to the README.md"
editor AddCreationDateToReadme

with File when path = "README.md"
  do replace "{{creation_date}}" { new Date().toISOString().split('T')[0] }
